name: CI Pipeline
env:
  DEFAULT_REGION: us-east-1
  FRONTEND_ECR_REPO: frontend-app
  BACKEND_ECR_REPO: backend-app

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  setup-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION || env.DEFAULT_REGION }}

      - name: Create Frontend ECR Repository
        run: |
          aws ecr describe-repositories --repository-names ${{ env.FRONTEND_ECR_REPO }} --region ${{ vars.AWS_REGION || env.DEFAULT_REGION }} || \
          aws ecr create-repository --repository-name ${{ env.FRONTEND_ECR_REPO }} --region ${{ vars.AWS_REGION || env.DEFAULT_REGION }}

      - name: Create Backend ECR Repository
        run: |
          aws ecr describe-repositories --repository-names ${{ env.BACKEND_ECR_REPO }} --region ${{ vars.AWS_REGION || env.DEFAULT_REGION }} || \
          aws ecr create-repository --repository-name ${{ env.BACKEND_ECR_REPO }} --region ${{ vars.AWS_REGION || env.DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry: ${{ vars.AWS_REGION || env.DEFAULT_REGION }}

      - name: Build Frontend Docker Image
        run: |
          docker build \
            -t ${{ steps.login-ecr.outputs.registry }}/${{ env.FRONTEND_ECR_REPO }}:latest \
            ./FrontEnd

      - name: Push Frontend Image to ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.FRONTEND_ECR_REPO }}:latest
