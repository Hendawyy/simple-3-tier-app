name: CI Pipeline
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  setup-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.1

      - name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION }}

      - name: Create Frontend ECR Repository
        env:
          FRONTEND_ECR_REPO: ${{ vars.FRONTEND_ECR_REPO }}
        run: |
          aws ecr describe-repositories --repository-names ${{ env.FRONTEND_ECR_REPO }} || \
          aws ecr create-repository --repository-name ${{ env.FRONTEND_ECR_REPO }}

      - name: Create Backend ECR Repository
        env:
          BACKEND_ECR_REPO: ${{ vars.BACKEND_ECR_REPO }}
        run: |
          aws ecr describe-repositories --repository-names ${{ env.BACKEND_ECR_REPO }} || \
          aws ecr create-repository --repository-name ${{ env.BACKEND_ECR_REPO }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push FrontEnd image
        uses: docker/build-push-action@v6.13.0
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
          FRONTEND_ECR_REPO: ${{ vars.FRONTEND_ECR_REPO }}
        with:
          context: ./FrontEnd
          push: true
          tags: |
            ${{ env.ECR_REGISTRY }}/${{ env.FRONTEND_ECR_REPO }}:latest
            ${{ env.ECR_REGISTRY }}/${{ env.FRONTEND_ECR_REPO }}:${{ env.IMAGE_TAG }}

      - name: Build and push BackEnd image
        uses: docker/build-push-action@v6.13.0
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
          BACKEND_ECR_REPO: ${{ vars.BACKEND_ECR_REPO }}
        with:
          context: ./Backend
          push: true
          tags: |
            ${{ env.ECR_REGISTRY }}/${{ env.BACKEND_ECR_REPO }}:latest
            ${{ env.ECR_REGISTRY }}/${{ env.BACKEND_ECR_REPO }}:${{ env.IMAGE_TAG }}
