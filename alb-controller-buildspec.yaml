version: 0.2
phases:
  install:
    commands:
      - echo "Installing tools..."
      # Debug: Check what we're downloading
      - echo "Downloading kubectl..."
      - curl -LO "https://dl.k8s.io/release/v1.30.2/bin/linux/amd64/kubectl"  # Use specific version
      - ls -la kubectl
      - file kubectl
      - chmod +x kubectl
      - ./kubectl version --client
      - mv kubectl /usr/local/bin/
      
      # Install helm
      - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
      - chmod 700 get_helm.sh
      - ./get_helm.sh
      
  pre_build:
    commands:
      - echo "Tools installed:"
      - which kubectl
      - kubectl version --client
      - which helm
      - helm version
      
      - echo "Updating kubeconfig..."
      - aws eks update-kubeconfig --region $REGION --name $CLUSTER_NAME
      - echo "Testing cluster access..."
      - kubectl get nodes
      
  build:
    commands:
      - echo "Setting up ALB Controller..."
      - helm repo add eks https://aws.github.io/eks-charts
      - helm repo update
      - |
        helm upgrade --install aws-load-balancer-controller \
          eks/aws-load-balancer-controller \
          -n aws-load-balancer-controller \
          --create-namespace \
          --set clusterName=$CLUSTER_NAME \
          --set serviceAccount.create=true \
          --set serviceAccount.name=aws-load-balancer-controller \
          --set serviceAccount.annotations."eks\.amazonaws\.com/role-arn"=$ALB_CONTROLLER_ROLE_ARN \
          --set region=$REGION \
          --set vpcId=$VPC_ID \
          --wait
          
  post_build:
    commands:
      - echo "Installation completed"
      - kubectl get all -n aws-load-balancer-controller
